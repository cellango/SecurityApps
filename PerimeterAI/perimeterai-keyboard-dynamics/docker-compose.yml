services:
  analytics:
    build: 
      context: ./services/analytics
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:perimeter123@postgres:5432/perimeterai
      - REDIS_URL=redis://redis:6379/0
      - AUTH_SERVICE_URL=http://auth:4000
    depends_on:
      - redis
    networks:
      - perimeterai-network

  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://postgres:perimeter123@postgres:5432/perimeterai
      - REDIS_URL=redis://redis:6379/1
      - JWT_SECRET=your-secret-key
      - KEYCLOAK_URL=http://perimeterai-keycloak:8081/auth
    depends_on:
      - redis
    networks:
      - perimeterai-network

  collector:
    build:
      context: ./services/collector
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - ANALYTICS_SERVICE_URL=http://analytics:5000
      - AUTH_SERVICE_URL=http://auth:4000
      - REDIS_URL=redis://redis:6379/2
    depends_on:
      - analytics
      - auth
      - redis
    networks:
      - perimeterai-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8083:80"
    environment:
      - API_URL=http://collector:3000
    depends_on:
      - collector
    networks:
      - perimeterai-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - perimeterai-network

networks:
  perimeterai-network:
 
