services:
  postgres:
    image: postgres:13
    container_name: keycloak-postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=perimeter123
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - keycloak-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: keycloak-server
    command: ["start-dev", "--http-port=8081"]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=perimeter123
      - KC_HOSTNAME_ADMIN_URL=http://localhost:8081
      - KC_HOSTNAME_URL=http://localhost:8081
      - KC_HTTP_ENABLED=true
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8081/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - keycloak-network

networks:
  keycloak-network:
    name: keycloak-network
    driver: bridge

volumes:
  postgres_data:
    name: keycloak-postgres-data
