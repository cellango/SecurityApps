from keycloak import KeycloakAdmin
import time
import sys

def setup_keycloak():
    # Wait for Keycloak to be ready
    time.sleep(30)
    
    # Connect to Keycloak admin
    keycloak_admin = KeycloakAdmin(
        server_url="http://localhost:8080/",
        username="admin",
        password="admin",
        realm_name="master",
        verify=True
    )
    
    # Create AppSentinel realm
    realm_name = "appsentinel"
    try:
        keycloak_admin.create_realm(
            payload={
                "realm": realm_name,
                "enabled": True,
                "displayName": "AppSentinel",
                "sslRequired": "external"
            }
        )
        print(f"Created realm: {realm_name}")
    except Exception as e:
        print(f"Realm creation failed (might already exist): {e}")
    
    # Switch to the new realm
    keycloak_admin.realm_name = realm_name
    
    # Create roles
    roles = ["app-admin", "app-user", "app-viewer"]
    for role in roles:
        try:
            keycloak_admin.create_realm_role({"name": role})
            print(f"Created role: {role}")
        except Exception as e:
            print(f"Role creation failed (might already exist): {e}")
    
    # Create AppInventory client (OAuth/OIDC)
    try:
        appinventory_client = keycloak_admin.create_client({
            "clientId": "appinventory",
            "name": "AppInventory",
            "enabled": True,
            "protocol": "openid-connect",
            "publicClient": False,
            "redirectUris": ["http://localhost:3000/*"],
            "webOrigins": ["http://localhost:3000"],
            "standardFlowEnabled": True,
            "implicitFlowEnabled": False,
            "directAccessGrantsEnabled": True,
            "serviceAccountsEnabled": True
        })
        print("Created AppInventory OAuth client")
    except Exception as e:
        print(f"AppInventory OAuth client creation failed (might already exist): {e}")
    
    # Create AppInventory SAML client
    try:
        appinventory_saml = keycloak_admin.create_client({
            "clientId": "appinventory-saml",
            "name": "AppInventory SAML",
            "enabled": True,
            "protocol": "saml",
            "redirectUris": ["http://localhost:3000/*"],
            "baseUrl": "http://localhost:3000",
            "attributes": {
                "saml.force.post.binding": "true",
                "saml.server.signature": "true",
                "saml.signing.certificate": "",  # Will be generated by Keycloak
                "saml.signing.private.key": ""   # Will be generated by Keycloak
            }
        })
        print("Created AppInventory SAML client")
    except Exception as e:
        print(f"AppInventory SAML client creation failed (might already exist): {e}")
    
    # Create test user
    try:
        keycloak_admin.create_user({
            "username": "testuser",
            "email": "test@example.com",
            "enabled": True,
            "credentials": [{
                "type": "password",
                "value": "testpass",
                "temporary": False
            }]
        })
        print("Created test user")
    except Exception as e:
        print(f"Test user creation failed (might already exist): {e}")

if __name__ == "__main__":
    setup_keycloak()
