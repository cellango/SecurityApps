name: Test and SonarQube Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: appsentinel_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install -r tests/requirements-test.txt
        pip install pytest pytest-cov behave selenium webdriver-manager

    - name: Install Node.js dependencies
      working-directory: frontend
      run: |
        npm install
        npm install -g jest

    - name: Run Python unit tests
      env:
        FLASK_ENV: testing
        DATABASE_URL: postgresql://test:test@localhost:5432/appsentinel_test
      run: |
        pytest

    - name: Run BDD tests
      env:
        FLASK_ENV: testing
        DATABASE_URL: postgresql://test:test@localhost:5432/appsentinel_test
      run: |
        behave tests/features/

    - name: Run frontend tests
      working-directory: frontend
      run: |
        npm test -- --coverage

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          coverage.xml
          test-results.xml
          coverage_html/
          frontend/coverage/
